name: "PR Validation - Auto Triggered"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**
    paths:
      - src/**
      - src**

  workflow_dispatch:

env:
  SFPOWERSCRIPTS_DATADOG: "false"
  SFPOWERSCRIPTS_DATADOG_HOST: "${{ vars.DATADOG_HOST }}"
  SFPOWERSCRIPTS_DATADOG_API_KEY: "${{ secrets.DATADOG_API_KEY }}"

jobs:
  validate:
    name: "Validate Changed Packages"
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp-rc:release-Mar24

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Authenticate Dev Hub"
        env:
          AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
        run: |
          echo $AUTH_URL > ./authfile
          sf org login sfdx-url -f authfile -a devhub

      # Validate source and trigger test
      - name: "Push source to scratch org"
        run: "sfp validate -p ci -v devhub -x"

  static:
    name: "PMD Static Apex Code Analysis"
    runs-on: ubuntu-latest
    container: ghcr.io/dxatscale/sfpowerscripts
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Run PMD static code analysis"
        shell: bash
        run: |
          sf scanner run -p ./src --target "./**/**.cls" --outfile scanner-output.xml --format=junit

  # validate-package-coverage:
  #   name: "validate metadata coverage for unlocked packages"
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/dxatscale/sfpowerscripts
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: "validate metadata coverage"
  #       shell: bash
  #       run: |
  #         sfdx sfpowerkit:package:valid -n core-crm -b StandardValueSet
